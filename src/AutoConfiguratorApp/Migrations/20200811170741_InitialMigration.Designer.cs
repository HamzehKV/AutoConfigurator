// <auto-generated />
using System;
using AutoConfiguratorApp.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace AutoConfiguratorApp.Migrations
{
    [DbContext(typeof(AkDbContext))]
    [Migration("20200811170741_InitialMigration")]
    partial class InitialMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                .HasAnnotation("ProductVersion", "3.1.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("AutoConfiguratorApp.Models.Auto.AutoModell", b =>
                {
                    b.Property<int>("AutoModellId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("HerstellerRefId")
                        .HasColumnType("integer");

                    b.Property<string>("ModelName")
                        .IsRequired()
                        .HasColumnType("character varying(30)")
                        .HasMaxLength(30);

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("AutoModellId");

                    b.HasIndex("HerstellerRefId");

                    b.ToTable("AutoModellen");

                    b.HasData(
                        new
                        {
                            AutoModellId = 200,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            HerstellerRefId = 100,
                            ModelName = "RangeRover",
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            AutoModellId = 201,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            HerstellerRefId = 100,
                            ModelName = "RangeRover Sport",
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            AutoModellId = 202,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            HerstellerRefId = 100,
                            ModelName = "RangeRover Velar",
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            AutoModellId = 203,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            HerstellerRefId = 101,
                            ModelName = "911",
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            AutoModellId = 204,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            HerstellerRefId = 101,
                            ModelName = "Cayenne",
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            AutoModellId = 205,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            HerstellerRefId = 101,
                            ModelName = "Macan",
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            AutoModellId = 206,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            HerstellerRefId = 102,
                            ModelName = "RSQ8",
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            AutoModellId = 207,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            HerstellerRefId = 102,
                            ModelName = "R8",
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            AutoModellId = 208,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            HerstellerRefId = 102,
                            ModelName = "RS7",
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            AutoModellId = 209,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            HerstellerRefId = 103,
                            ModelName = "AMG GT",
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            AutoModellId = 210,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            HerstellerRefId = 103,
                            ModelName = "GLE",
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            AutoModellId = 211,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            HerstellerRefId = 103,
                            ModelName = "G-Klasse",
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            AutoModellId = 212,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            HerstellerRefId = 104,
                            ModelName = "8er",
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            AutoModellId = 213,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            HerstellerRefId = 104,
                            ModelName = "X6",
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            AutoModellId = 214,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            HerstellerRefId = 104,
                            ModelName = "7er",
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("AutoConfiguratorApp.Models.Auto.AutoModell_Felge", b =>
                {
                    b.Property<int>("AutoModell_FelgeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("AutoModellId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("FelgeId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("AutoModell_FelgeId");

                    b.HasIndex("AutoModellId");

                    b.HasIndex("FelgeId");

                    b.ToTable("AutoModelle_Felgen");
                });

            modelBuilder.Entity("AutoConfiguratorApp.Models.Auto.AutoModell_Lackierung", b =>
                {
                    b.Property<int>("AutoModell_LackierungId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("AutoModellId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("LackierungId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("AutoModell_LackierungId");

                    b.HasIndex("AutoModellId");

                    b.HasIndex("LackierungId");

                    b.ToTable("AutoModelle_Lackierungen");
                });

            modelBuilder.Entity("AutoConfiguratorApp.Models.Auto.AutoModell_Motor", b =>
                {
                    b.Property<int>("AutoModell_MotorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("AutoModellId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("MotorId")
                        .HasColumnType("integer");

                    b.HasKey("AutoModell_MotorId");

                    b.HasIndex("AutoModellId");

                    b.HasIndex("MotorId");

                    b.ToTable("AutoModelle_Motoren");
                });

            modelBuilder.Entity("AutoConfiguratorApp.Models.Auto.Felge", b =>
                {
                    b.Property<int>("FelgeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Material")
                        .HasColumnType("text");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("Size")
                        .HasColumnType("integer");

                    b.HasKey("FelgeId");

                    b.ToTable("Felgen");

                    b.HasData(
                        new
                        {
                            FelgeId = 300,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Size = 18
                        },
                        new
                        {
                            FelgeId = 301,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Size = 19
                        },
                        new
                        {
                            FelgeId = 302,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Size = 20
                        },
                        new
                        {
                            FelgeId = 303,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Size = 21
                        },
                        new
                        {
                            FelgeId = 304,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Size = 22
                        });
                });

            modelBuilder.Entity("AutoConfiguratorApp.Models.Auto.Hersteller", b =>
                {
                    b.Property<int>("HerstellerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("HerstellerId");

                    b.ToTable("Hersteller");

                    b.HasData(
                        new
                        {
                            HerstellerId = 100,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "LandRover"
                        },
                        new
                        {
                            HerstellerId = 101,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Porsche"
                        },
                        new
                        {
                            HerstellerId = 102,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "AUDI"
                        },
                        new
                        {
                            HerstellerId = 103,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "MercedesBenz"
                        },
                        new
                        {
                            HerstellerId = 104,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "BMW"
                        },
                        new
                        {
                            HerstellerId = 105,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "VW"
                        });
                });

            modelBuilder.Entity("AutoConfiguratorApp.Models.Auto.Lackierung", b =>
                {
                    b.Property<int>("LackierungId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("Code")
                        .HasColumnType("integer");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("LackierungId");

                    b.ToTable("Lackierungen");
                });

            modelBuilder.Entity("AutoConfiguratorApp.Models.Auto.Motor", b =>
                {
                    b.Property<int>("MotorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("Leistung")
                        .HasColumnType("integer");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("MotorId");

                    b.ToTable("Motoren");
                });

            modelBuilder.Entity("AutoConfiguratorApp.Models.AutoKonfiguration", b =>
                {
                    b.Property<int>("AutoKonfigurationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp without time zone");

                    b.Property<int?>("IdRefFSS")
                        .HasColumnType("integer");

                    b.Property<int?>("IdRefKA")
                        .HasColumnType("integer");

                    b.Property<int?>("IdRefNS")
                        .HasColumnType("integer");

                    b.Property<int?>("IdRefPAS")
                        .HasColumnType("integer");

                    b.Property<int?>("IdRefSS")
                        .HasColumnType("integer");

                    b.Property<int?>("IdRef_AM_F")
                        .IsRequired()
                        .HasColumnType("integer");

                    b.Property<int?>("IdRef_AM_L")
                        .IsRequired()
                        .HasColumnType("integer");

                    b.Property<int?>("IdRef_AM_M")
                        .IsRequired()
                        .HasColumnType("integer");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("AutoKonfigurationId");

                    b.HasIndex("IdRefFSS");

                    b.HasIndex("IdRefKA");

                    b.HasIndex("IdRefNS");

                    b.HasIndex("IdRefPAS");

                    b.HasIndex("IdRefSS");

                    b.HasIndex("IdRef_AM_F");

                    b.HasIndex("IdRef_AM_L");

                    b.HasIndex("IdRef_AM_M");

                    b.ToTable("AutoKonfigurationen");
                });

            modelBuilder.Entity("AutoConfiguratorApp.Models.SonderAusstattungen.FahrSicherheitsSystem", b =>
                {
                    b.Property<int>("FahrSicherheitsSystemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("FahrSicherheitsSystemId");

                    b.ToTable("FahrSicherheitsSysteme");
                });

            modelBuilder.Entity("AutoConfiguratorApp.Models.SonderAusstattungen.KlimaAnlage", b =>
                {
                    b.Property<int>("KlimaAnlageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("KlimaAnlageId");

                    b.ToTable("KlimaAnlagen");
                });

            modelBuilder.Entity("AutoConfiguratorApp.Models.SonderAusstattungen.NavigationsSystem", b =>
                {
                    b.Property<int>("NavigationsSystemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("NavigationsSystemId");

                    b.ToTable("NavigationsSysteme");
                });

            modelBuilder.Entity("AutoConfiguratorApp.Models.SonderAusstattungen.ParkAssistentSystem", b =>
                {
                    b.Property<int>("ParkAssistentSystemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("ParkAssistentSystemId");

                    b.ToTable("ParkAssistentSysteme");
                });

            modelBuilder.Entity("AutoConfiguratorApp.Models.SonderAusstattungen.SoundSystem", b =>
                {
                    b.Property<int>("SoundSystemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("SoundSystemId");

                    b.ToTable("SoundSysteme");
                });

            modelBuilder.Entity("AutoConfiguratorApp.Models.Auto.AutoModell", b =>
                {
                    b.HasOne("AutoConfiguratorApp.Models.Auto.Hersteller", "Hersteller")
                        .WithMany()
                        .HasForeignKey("HerstellerRefId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("AutoConfiguratorApp.Models.Auto.AutoModell_Felge", b =>
                {
                    b.HasOne("AutoConfiguratorApp.Models.Auto.AutoModell", "AutoModell")
                        .WithMany("AutoModell_Felges")
                        .HasForeignKey("AutoModellId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AutoConfiguratorApp.Models.Auto.Felge", "Felge")
                        .WithMany("AutoModell_Felges")
                        .HasForeignKey("FelgeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("AutoConfiguratorApp.Models.Auto.AutoModell_Lackierung", b =>
                {
                    b.HasOne("AutoConfiguratorApp.Models.Auto.AutoModell", "AutoModell")
                        .WithMany("AutoModell_Lackierungs")
                        .HasForeignKey("AutoModellId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AutoConfiguratorApp.Models.Auto.Lackierung", "Lackierung")
                        .WithMany("AutoModell_Lackierungs")
                        .HasForeignKey("LackierungId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("AutoConfiguratorApp.Models.Auto.AutoModell_Motor", b =>
                {
                    b.HasOne("AutoConfiguratorApp.Models.Auto.AutoModell", "AutoModell")
                        .WithMany("AutoModell_Motors")
                        .HasForeignKey("AutoModellId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AutoConfiguratorApp.Models.Auto.Motor", "Motor")
                        .WithMany("AutoModell_Motors")
                        .HasForeignKey("MotorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("AutoConfiguratorApp.Models.AutoKonfiguration", b =>
                {
                    b.HasOne("AutoConfiguratorApp.Models.SonderAusstattungen.FahrSicherheitsSystem", "FahrSicherheitsSystem")
                        .WithMany()
                        .HasForeignKey("IdRefFSS");

                    b.HasOne("AutoConfiguratorApp.Models.SonderAusstattungen.KlimaAnlage", "KlimaAnlage")
                        .WithMany()
                        .HasForeignKey("IdRefKA");

                    b.HasOne("AutoConfiguratorApp.Models.SonderAusstattungen.NavigationsSystem", "NavigationsSystem")
                        .WithMany()
                        .HasForeignKey("IdRefNS");

                    b.HasOne("AutoConfiguratorApp.Models.SonderAusstattungen.ParkAssistentSystem", "ParkAssistentSystem")
                        .WithMany()
                        .HasForeignKey("IdRefPAS");

                    b.HasOne("AutoConfiguratorApp.Models.SonderAusstattungen.SoundSystem", "SoundSystem")
                        .WithMany()
                        .HasForeignKey("IdRefSS");

                    b.HasOne("AutoConfiguratorApp.Models.Auto.AutoModell_Felge", "AutoModell_Felge")
                        .WithMany()
                        .HasForeignKey("IdRef_AM_F")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AutoConfiguratorApp.Models.Auto.AutoModell_Lackierung", "AutoModell_Lackierung")
                        .WithMany()
                        .HasForeignKey("IdRef_AM_L")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AutoConfiguratorApp.Models.Auto.AutoModell_Motor", "AutoModell_Motor")
                        .WithMany()
                        .HasForeignKey("IdRef_AM_M")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
